{
    "name":  "epem",
    "version":  "0.3.0",
    "private":  true,
    "description":  "Plataforma EPEM basada en microservicios.",
"packageManager":  "pnpm@8.15.6",
  "devDependencies": {
    "eslint": "^8.57.1",
    "@typescript-eslint/parser": "^7.18.0",
    "@typescript-eslint/eslint-plugin": "^7.18.0",
    "prettier": "^3.3.3",
    "eslint-config-prettier": "^9.1.0"
  },
    "scripts":  {
                    "clean":  "powershell -NoProfile -ExecutionPolicy Bypass -File scripts/cleanup.ps1",
                    "dev":  "pnpm -r --parallel --filter=./services/* --filter=@epem/web run dev",
                    "dev:users":  "pnpm --filter @epem/users-service run dev",
                    "dev:stop":  "powershell -NoProfile -ExecutionPolicy Bypass -File scripts/qa/stop-dev.ps1 -AlsoPorts; powershell -NoProfile -ExecutionPolicy Bypass -File scripts/dev-reset.ps1 -NoStart",
                    "dev:compose":  "powershell -NoProfile -ExecutionPolicy Bypass -File scripts/quickstart-compose-dev.ps1",
                    "stop:docker":  "powershell -NoProfile -ExecutionPolicy Bypass -File ops/docker/down.ps1",
                    "qa:front:e2e:roles:toggle":  "powershell -NoProfile -ExecutionPolicy Bypass -File scripts/qa/front-e2e.ps1 -Spec tests/roles-toggle.spec.ts",
                    "git:hooks":  "git config core.hooksPath .githooks",
                    "dev:backend":  "pnpm -r --parallel --filter=./services/* run dev",
                    "env:staging:init":  "node scripts/env-init.js --from .env.staging.example --to .env.staging",
                    "env:init":  "node scripts/env-init.js",
                    "deploy:quick:sh":  "bash scripts/deploy/quickstart.sh",
                    "qa:front:e2e:roles":  "powershell -NoProfile -ExecutionPolicy Bypass -File scripts/qa/front-e2e.ps1 -Spec tests/roles.spec.ts",
                    "qa:front":  "node scripts/qa/test-front.js",
                    "analyze:deps":  "powershell -NoProfile -ExecutionPolicy Bypass -File scripts/analyze/deps.ps1",
                    "qa:observability":  "node scripts/qa/test-observability.js",
                    "images:build:push":  "powershell -NoProfile -ExecutionPolicy Bypass -File scripts/deploy/build-push.ps1",
                    "dev:billing":  "pnpm --filter @epem/billing-service run dev",
                    "docker:up":  "powershell -NoProfile -ExecutionPolicy Bypass -File ops/docker/up.ps1",
                    "lint":  "pnpm -r --workspace-concurrency=1 run lint",
                    "qa:front:e2e":  "powershell -NoProfile -ExecutionPolicy Bypass -File scripts/qa/front-e2e.ps1",
                    "analyze:deadcode":  "npx --yes ts-prune -p tsconfig.base.json",
                    "secrets:scan":  "node scripts/secrets-scan.js",
                    "dev:stop:pids":  "powershell -NoProfile -ExecutionPolicy Bypass -File scripts/qa/stop-dev.ps1",
                    "test":  "pnpm -r --workspace-concurrency=1 run test",
                    "env:prod:init":  "node scripts/env-init.js --from .env.prod.example --to .env.prod",
                    "dev:reset":  "powershell -NoProfile -ExecutionPolicy Bypass -File scripts/dev-reset.ps1",
                    "dev:catalog":  "pnpm --filter @epem/catalog-service run dev",
                    "pw:install":  "pnpm --filter @epem/web pw:install",
                    "dev:web":  "pnpm --filter @epem/web run dev",
                    "images:build:push:sh":  "bash scripts/deploy/build-push.sh",
                    "stop:all":  "powershell -NoProfile -ExecutionPolicy Bypass -File scripts/qa/stop-all.ps1",
                    "dev:docker":  "powershell -NoProfile -ExecutionPolicy Bypass -File scripts/quickstart-docker.ps1",
                    "deploy:staging:sh":  "pnpm deploy:quick:sh -- --env-file .env.staging",
                    "dev:patients":  "pnpm --filter @epem/patients-service run dev",
                    "deploy:quick":  "powershell -NoProfile -ExecutionPolicy Bypass -File scripts/deploy/quickstart.ps1",
                    "deploy:prod:linux":  "bash scripts/quickstart-prod-linux.sh",
                    "deploy:prod:down:linux":  "docker compose --env-file .env.prod down",
                    "deploy:prod:down:linux:volumes":  "docker compose --env-file .env.prod down -v",
                    "docker:down":  "powershell -NoProfile -ExecutionPolicy Bypass -File ops/docker/down.ps1",
                    "clean:deep":  "powershell -NoProfile -ExecutionPolicy Bypass -File scripts/cleanup.ps1 -Deep",
                    "build":  "pnpm -r run build",
                    "dev:all":  "pnpm -r --parallel --filter=./services/* --filter=@epem/web run dev",
                    "dev:one":  "powershell -NoProfile -ExecutionPolicy Bypass -File scripts/quickstart-dev.ps1",
                    "dev:one:linux":  "bash scripts/quickstart-dev-linux.sh",
                    "analyze:orphans":  "powershell -NoProfile -ExecutionPolicy Bypass -File scripts/analyze/orphans.ps1",
                    "stop:compose":  "docker compose -f docker-compose.yml -f docker-compose.dev.yml --env-file .env.prod down",
                    "deploy:staging:win":  "pnpm deploy:quick -- -EnvFile .env.staging",
                    "deploy":  "node scripts/deploy/auto.js",
                    "web:reset":  "powershell -NoProfile -ExecutionPolicy Bypass -File scripts/web-reset.ps1",
                    "dev:gateway":  "pnpm --filter @epem/api-gateway run dev",
                    "deploy:check":  "node scripts/qa/test-back.js \u0026\u0026 node scripts/qa/test-front.js",
                    "dev:start:all":  "powershell -NoProfile -ExecutionPolicy Bypass -File scripts/qa/start-dev.ps1",
                    "qa:backend":  "node scripts/qa/test-back.js",
                    "qa:assure":  "powershell -NoProfile -ExecutionPolicy Bypass -File scripts/qa/assure.ps1",
                    "lint:eslint": "eslint . --ext .ts,.tsx -c .eslintrc.cjs",
                    "format": "prettier --write \"**/*.{ts,tsx,js,json,md,yml,yaml}\""
                },
    "engines":  {
                    "node":  "\u003e=18.18.0",
                    "pnpm":  "\u003e=8.0.0"
                }
}
