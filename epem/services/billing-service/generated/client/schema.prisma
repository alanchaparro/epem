generator client {
  provider      = "prisma-client-js"
  output        = "../generated/client"
  binaryTargets = ["native", "debian-openssl-3.0.x", "windows"]
}

datasource db {
  provider = "mysql"
  url      = env("BILLING_SERVICE_DATABASE_URL")
}

model Insurer {
  id        String     @id @default(uuid())
  name      String
  planCode  String     @unique
  active    Boolean    @default(true)
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  coverages Coverage[]
}

model Coverage {
  id            String   @id @default(uuid())
  insurerId     String
  serviceItemId String
  copay         Decimal  @db.Decimal(10, 2)
  requiresAuth  Boolean  @default(false)
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  insurer Insurer @relation(fields: [insurerId], references: [id], onDelete: Cascade)

  @@index([insurerId])
  @@index([serviceItemId])
}

model Authorization {
  id            String              @id @default(uuid())
  orderId       String
  patientId     String
  serviceItemId String
  insurerId     String?
  status        AuthorizationStatus @default(PENDING)
  authCode      String?
  requestedAt   DateTime            @default(now())
  resolvedAt    DateTime?
  createdAt     DateTime            @default(now())
  updatedAt     DateTime            @updatedAt

  @@index([status])
  @@index([orderId])
}

enum AuthorizationStatus {
  PENDING
  APPROVED
  DENIED
}

model Invoice {
  id        String        @id @default(uuid())
  patientId String
  orderId   String        @unique
  total     Decimal       @db.Decimal(10, 2)
  status    InvoiceStatus @default(DRAFT)
  issuedAt  DateTime?
  createdAt DateTime      @default(now())
  updatedAt DateTime      @updatedAt

  @@index([status])
}

enum InvoiceStatus {
  DRAFT
  ISSUED
}
